import React, { Component } from 'react';
import styles from './OnePageCalendar.css';

const DAYS_SHORT = ['M', 'T', 'W', 'Th', 'F', 'S', 'Su'];
const DAYS_LONG = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];

const MONTHS_SMALL = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
const MONTHS_LARGE = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];

class OnePageCalendar extends Component {
	constructor() {
		super();
		this.state = {
			months: [[], [], [], [], [], [], []],
			days: []
		};
		this.getMonths = this.getMonths.bind(this);
	}

	componentWillMount() {
		let { size, year } = this.props;
		if(Number.isInteger(year)) {
			if(size === 'small') {
				this.setState({ days: DAYS_SHORT });
			} else {
				this.setState({ days: DAYS_LONG });
			}
			this.getMonths(this.props.year);
		}
	}

	componentWillReceiveProps(nextProps){
		let { size, year } = this.props;
		if(Number.isInteger(year)) {
			if(size === 'small') {
				this.setState({ days: DAYS_SHORT });
			} else {
				this.setState({ days: DAYS_LONG });
			}
			this.getMonths(this.props.year);
		}
	}

	getMonths(year) {
		let months = [[], [], [], [], [], [], []];
		let MONTHS = this.props.size === 'small' ? MONTHS_SMALL : MONTHS_LARGE;
	  for(let i = 1; i <= 12; i++) {
	      let day = new Date(i + '/1/' + year).getDay(); // mm dd yyyy
	      months[day].push(MONTHS[i-1]);
	  };
		this.setState({ months });
	}

	render () {
		let { days, months } = this.state;
		let { size, year } = this.props;
		return (
			Number.isInteger(year) ?
			<table className={`OnePageCalendar ${ size === 'small' ? 'Small' : 'Large' }`}>
				<thead>
					<tr>
						<th colSpan={5}>Dates</th>
						<th colSpan={7}>Months</th>
					</tr>
					<tr>
						<th colSpan={5}>Year: {year}</th>
						<th>{months[1].map(function(month, key) { return (<div key={key}>{month}</div>)})}</th>
						<th>{months[2].map(function(month, key) { return (<div key={key}>{month}</div>)})}</th>
						<th>{months[3].map(function(month, key) { return (<div key={key}>{month}</div>)})}</th>
						<th>{months[4].map(function(month, key) { return (<div key={key}>{month}</div>)})}</th>
						<th>{months[5].map(function(month, key) { return (<div key={key}>{month}</div>)})}</th>
						<th>{months[6].map(function(month, key) { return (<div key={key}>{month}</div>)})}</th>
						<th>{months[0].map(function(month, key) { return (<div key={key}>{month}</div>)})}</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>01</td>
						<td>08</td>
						<td>15</td>
						<td>22</td>
						<td>29</td>
						<td>{days[0]}</td>
						<td>{days[1]}</td>
						<td>{days[2]}</td>
						<td>{days[3]}</td>
						<td>{days[4]}</td>
						<td>{days[5]}</td>
						<td>{days[6]}</td>
					</tr>
					<tr>
						<td>02</td>
						<td>09</td>
						<td>16</td>
						<td>23</td>
						<td>30</td>
						<td>{days[1]}</td>
						<td>{days[2]}</td>
						<td>{days[3]}</td>
						<td>{days[4]}</td>
						<td>{days[5]}</td>
						<td>{days[6]}</td>
						<td>{days[0]}</td>
					</tr>
					<tr>
						<td>03</td>
						<td>10</td>
						<td>17</td>
						<td>24</td>
						<td>31</td>
						<td>{days[2]}</td>
						<td>{days[3]}</td>
						<td>{days[4]}</td>
						<td>{days[5]}</td>
						<td>{days[6]}</td>
						<td>{days[0]}</td>
						<td>{days[1]}</td>
					</tr>
					<tr>
						<td>04</td>
						<td>11</td>
						<td>18</td>
						<td>25</td>
						<td></td>
						<td>{days[3]}</td>
						<td>{days[4]}</td>
						<td>{days[5]}</td>
						<td>{days[6]}</td>
						<td>{days[0]}</td>
						<td>{days[1]}</td>
						<td>{days[2]}</td>
					</tr>
					<tr>
						<td>05</td>
						<td>12</td>
						<td>19</td>
						<td>26</td>
						<td></td>
						<td>{days[4]}</td>
						<td>{days[5]}</td>
						<td>{days[6]}</td>
						<td>{days[0]}</td>
						<td>{days[1]}</td>
						<td>{days[2]}</td>
						<td>{days[3]}</td>
					</tr>
					<tr>
						<td>06</td>
						<td>13</td>
						<td>20</td>
						<td>27</td>
						<td></td>
						<td>{days[5]}</td>
						<td>{days[6]}</td>
						<td>{days[0]}</td>
						<td>{days[1]}</td>
						<td>{days[2]}</td>
						<td>{days[3]}</td>
						<td>{days[4]}</td>
					</tr>
					<tr>
						<td>07</td>
						<td>14</td>
						<td>21</td>
						<td>28</td>
						<td></td>
						<td>{days[6]}</td>
						<td>{days[0]}</td>
						<td>{days[1]}</td>
						<td>{days[2]}</td>
						<td>{days[3]}</td>
						<td>{days[4]}</td>
						<td>{days[5]}</td>
					</tr>
				</tbody>
			</table> :
			<div className={`InvalidYear`}>
				Invalid Year! Calendar Not Available.
			</div>
		);
	}
}


OnePageCalendar.defaultProps = {
	year: new Date().getFullYear(),
	size: 'large'
};

export default OnePageCalendar;
